@mixin flexy($dir:null, $just:null, $align:null, $wrap:null) {
  display: flex;
  flex-direction: $dir;
  justify-content: $just;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin center-box {
  position: absolute;
  top: 51%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin set-sticky-item($top:null, $right:null, $bottom:null, $left:null, $width: null, $height: null) {
  position: fixed;
  height: $height;
  width: $width;
  
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin double-border{
  border-top: 8px double;
  border-bottom: 8px double;
}

@mixin space-inside($top:null, $right:null, $bottom:null, $left:null) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

@mixin space-outside($top:null, $right:null, $bottom:null, $left:null) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

@mixin shadow($color) {
  box-shadow: 5px 5px 25px $color;
}

@mixin height-anim($maxHeight) {
  // animating the height
  max-height: $maxHeight;
  overflow:hidden;
  transition: max-height 1s ease;
  height:auto;
}

@mixin setAnimation($name, $duration, $delay:null, $fillMode:null) {
  animation: $name $duration ease-out;
  animation-delay: $delay;
  animation-fill-mode: $fillMode;
  backface-visibility: hidden;
}

// MEDIA QUERIES
@mixin mq($break) {
  @if $break == 'm' {
    @media (min-width: $break-m){
      @content;
    }
  }
  @else if  $break == 'l' {
    @media (min-width: $break-l){
      @content;
    }
  }
  @else if  $break == 'xl' {
    @media (min-width: $break-xl){
      @content;
    }
  }
}
